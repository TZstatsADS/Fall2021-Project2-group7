}
View(sites)
sites[1]
sites[5]
test_sites <- covid_vax %>%
html_nodes(".contact_page_container") %>%
html_nodes(".m-b-20") %>%
html_text()
test_sites_tokens <-str_split(test_sites,'\n\t\t')
sites <- list()
for(i in length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
}
View(sites)
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
}
View(sites)
test_sites_tokens[5][[1]][[2]]
test_sites_tokens[5][[1]][[3]]
test_sites_tokens[5][[1]][[4]]
test_sites_tokens[5][[1]][[5]]
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][[2]]
boro_zip[i] <- test_sites_tokens[i][[1]][[3]]
time_date[i] <- test_sites_tokens[i][[1]][[4]]
output <- cbind(sites, address, boro_zip, time_date)
}
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][[2]]
boro_zip[i] <- test_sites_tokens[i][[1]][[3]]
time_date[i] <- test_sites_tokens[i][[1]][[4]]
output <- cbind(sites, address, boro_zip, time_date)
}
test_sites_tokens[153][[1]][[2]]
test_sites_tokens[153][[2]][[1]]
test_sites_tokens[153][[1]]
test_sites_tokens[153][[1]][2]
address[i] <- test_sites_tokens[i][[1]][2]
View(address)
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][[3]]
time_date[i] <- test_sites_tokens[i][[1]][[4]]
output <- cbind(sites, address, boro_zip, time_date)
}
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- cbind(sites, address, boro_zip, time_date)
}
warnings()
View(adult_exer_equip)
View(boro_zip)
View(time_date)
View(output)
unlist(sites)
sites <- unlist(sites)
sites
type(sites)
typeof(sites)
x <- list(1, 2, 4)
View(x)
rm(x)
output <- as_data_frame(sites, address, boro_zip, time_date)
View(output)
output <- as_tibble(sites, address, boro_zip, time_date)
sites <- tibble()
address <- tibble()
boro_zip <- tibble()
time_date <- tibble()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- cbind(sites, address, boro_zip, time_date)
}
sites[i] <- test_sites_tokens[i][[1]][[1]]
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}
output <- output %>%  replace(.==NULL, NA)
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}
output_tidy <- na.omit(output)
View(output_tidy)
output_tidy <- na.omit(output)
output_tidy <- output[complete.cases(output),]
output_tidy <- output[complete.cases(output)]
output_tidy <- output[complete.cases(output), ]
output_tidy <- na.omit(output)
is.null(output)
which(is.null(output))
output[which(is.null(output))]
output_tidy <- output %>%
filter(is.na(output$address) == 0)
View(output_tidy)
output_tidy <- output %>%
filter(is.na(output$address) == 0) %>%
filter(is.na(output$time_date) ==0) %>%
filter(is.null(output$sites) ==0)
output_tidy <- output %>%
filter(is.na(output$address) == 0 && is.na(output$time_date) ==0 && is.null(output$sites) ==0)
View(output_tidy)
output_tidy <- output %>%
filter(is.na(output$address) && is.na(output$time_date) && is.null(output$sites) ==0)
output_tidy <- output %>%
filter(is.na(output$address)==0 &&
is.na(output$time_date)==0 &&
is.null(output$sites) ==0)
output_tidy <- output %>%
filter(is.na(output$address)==0 |
is.na(output$time_date)==0 |
is.null(output$sites) ==0)
output_tidy <- output %>%
filter(is.na(output$address)==0 | is.na(output$time_date)==0 )
View(output_tidy)
output_tidy <- output %>%
filter(is.na(output$address)==0 | is.null(output$time_date)==0 )
output_tidy <- output %>%
filter(is.na(output$address)==0)
output_tidy <- output %>%
filter(is.na(address)==0)
output_tidy <- output %>%
filter(is.na(address)==0) %>%
filter(is.na(time_date) ==0)
output_tidy <- output %>%
filter(is.na(address)==0) %>%
filter(is.na(time_date) ==0) %>%
filter(is.null(sites) ==0)
output_tidy <- output %>%
filter(is.na(address)==0) %>%
filter(is.na(time_date) ==0) %>%
filter(sites != "NULL")
test_sites_tokens <-str_split(test_sites,'\n\t')
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}
output_tidy <- output %>%
filter(is.na(address)==0) %>%
filter(is.na(time_date) ==0) %>%
filter(sites != "NULL")
test_sites_tokens[105][[1]][[1]]
test_sites_tokens[105]\
test_sites_tokens[105]
test_sites_tokens[1]
test_sites_tokens[5]
test_sites_tokens[6]
test_sites_tokens[21]
test_sites_tokens[25]
test_sites_tokens[26]
test_sites_tokens[110]
test_sites_tokens[111]
test_sites_tokens[120]
test_sites_tokens[121]
test_sites_tokens[125]
test_sites_tokens[126]
View(test_sites_tokens)
View(page)
x <- covid_vax %>%
html_nodes(".contact_page_container") %>%
html_nodes(".m-b-20")
View(x)
test_sites
View(test_sites_str)
test_sites_str[114]
output_tidy <- output %>%
filter(sites != "NULL")
View(output_tidy)
test_sites_str[114]
test_sites_str[112]
test_sites_tokens[112]
test_sites_tokens[98]
test_sites_tokens[112]
test_sites_tokens[111]
test_sites_tokens[98]
test_sites_tokens[99]
test_sites_tokens[100]
test_sites_tokens[101]
test_sites_tokens[102]
test_sites_tokens[103]
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
View(output_tidy)
output_tidy$boro_zip %>%
str_split('NY ')[1]
output_tidy$boro_zip %>%
str_split('NY ')[1]
str_split(output_tidy$boro_zip, 'NY ')[1]
output_tidy[borough]<- str_split(output_tidy$boro_zip, 'NY ')[1][1]
str_split(output_tidy$boro_zip, 'NY ')[1][1]
str_extract(output$boro_zip, "\\d+")
test_sites_tokens <-str_split(test_sites,'\n\t')
View(test_sites_tokens)
View(test_sites_str)
View(test_sites_tokens)
test_sites_tokens <-str_split(test_sites,'\n\t\t')
View(test_sites_tokens)
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}
View(park_list)
View(output)
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
length(test_sites_tokens[i])
length(test_sites_tokens[i][1])
length(test_sites_tokens[i][[1]])
if (length(test_sites_tokens[i][[1]]) ==4){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}}
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
if (length(test_sites_tokens[i][[1]]) ==4){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}}
View(output)
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
View(output_tidy)
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
View(output_tidy)
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
if (length(test_sites_tokens[i][[1]] ==4)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}}
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
View(output_tidy)
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
if (length(test_sites_tokens[i][[1]] ==4)){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}}
sites <- list()
address <- list()
boro_zip <- list()
time_date <- list()
for(i in 5:length(test_sites_tokens)){
if (length(test_sites_tokens[i][[1]]) ==4){
sites[i] <- test_sites_tokens[i][[1]][[1]]
address[i] <- test_sites_tokens[i][[1]][2]
boro_zip[i] <- test_sites_tokens[i][[1]][3]
time_date[i] <- test_sites_tokens[i][[1]][4]
output <- tibble(sites, address, boro_zip, time_date)
}}
View(output)
output_tidy <- output %>%
filter(is.na(boro_zip) ==0) %>%
filter(sites != "NULL")
str_extract(output$boro_zip, "\\d+")
str_extract(output_tidy$boro_zip, "\\d+")
output_tidy['zipcode'] <- str_extract(output_tidy$boro_zip, "\\d+")
str_extract(output_tidy$boro_zip, "\\d{5}")
output_tidy['zipcode'] <- str_extract(output_tidy$boro_zip, "\\d{5}")
grepl("Manhattan|Queens|Brooklyn|Bronx", output_tidy$boro_zip)
output_tidy$boro_zip[grepl("Manhattan|Queens|Brooklyn|Bronx", output_tidy$boro_zip)]
View(output_tidy)
View(output)
View(test_sites_tokens)
library(ggmap)
nyc <- c(lon = -74.0059, lat = 40.7128)
nyc_map <- get_map(location = nyc, zoom = 11)
ggmap(nyc_map)
View(ath_facilities)
register_google(key = "AIzaSyChyjtcHL2bjFPmOaxqXFcmEcSOJCzSmqo", write = TRUE)
locations_sf <- st_as_sf(ath_facilities@data, coords = c("longitude", "latitude"), crs = 4326)
mapview(locations_sf)
library(mapview)
register_google(key = "AIzaSyChyjtcHL2bjFPmOaxqXFcmEcSOJCzSmqo", write = TRUE)
locations_sf <- st_as_sf(ath_facilities@data, coords = c("longitude", "latitude"), crs = 4326)
mapview(locations_sf)
library(sf)
register_google(key = "AIzaSyChyjtcHL2bjFPmOaxqXFcmEcSOJCzSmqo", write = TRUE)
locations_sf <- st_as_sf(ath_facilities@data, coords = c("longitude", "latitude"), crs = 4326)
mapview(locations_sf)
remotes::install_github("mfherman/nycgeo")
library(nycgeo)
runApp('test.R')
install.packages("here")
library(here)
park_list$ath_facilities["content"] <- paste(sep = "<br/>",
paste0(park_list$ath_facilities$propertyname,", ",park_list$ath_facilities$borough,", NY"),
paste0("<b>Status: </b>",park_list$ath_facilities$status),
paste0("<b>Primary sport: </b>", park_list$ath_facilities$primarysport),
paste0("<b>Surface type: </b>", park_list$ath_facilities$surfacetype))
park_list$ath_facilities["content"] <- paste(sep = "<br/>",
paste0(park_list$ath_facilities$propertyname,", ",park_list$ath_facilities$borough,", NY"),
paste0("<b>Status: </b>",park_list$ath_facilities$status),
paste0("<b>Primary sport: </b>", park_list$ath_facilities$primarysport),
paste0("<b>Surface type: </b>", park_list$ath_facilities$surfacetype))
source('~/Documents/GitHub/Fall2021-Project2-group7/lib/data_processing.R', echo=TRUE)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='jeesunyun', token='D40EE2165FE5B47F7D59122D260404B3', secret='JmzTKgkxWBJh4bCO0qKeA6CoLu8tInmopEwNKS8C')
library(rsconnect)
rsconnect::deployApp('../app')
getwd()
rsconnect::deployApp('../app')
runApp(getwd())
getwd()
setwd("~/Documents/GitHub/Fall2021-Project2-group7/app")
shiny::runApp()
getwd()
runApp()
runApp('~/Documents/GitHub/Fall2021-Project2-group7/lib/test.R')
View(park_list)
View(adult_exer_equip)
list2env(dfList,.GlobalEnv)
list2env(park_list,.GlobalEnv)
View(park_list)
source('~/Documents/GitHub/Fall2021-Project2-group7/lib/data_processing.R', echo=TRUE)
runApp('~/Documents/GitHub/Fall2021-Project2-group7/lib/test.R')
runApp('test.R')
runApp('~/Documents/GitHub/Fall2021-Project2-group7/lib/test.R')
runApp('~/Documents/GitHub/Fall2021-Project2-group7/app')
runApp()
source('~/Documents/GitHub/Fall2021-Project2-group7/lib/data_processing.R', echo=TRUE)
runApp()
adult_exer_equip <- readr::read_csv("../data/AdultExerciseEquip_clean.csv")
runApp()
View(adult_exer_equip)
runApp()
if(!require(fontawesome)) devtools::install_github("rstudio/fontawesome")
devtools::install_github("rstudio/fontawesome")
runApp()
library(leaflet)
runApp()
View(playgrounds)
View(ath_facilities)
runApp()
playgrounds$Status["Reopened"]
playgrounds$Status=="Reopened"
playgrounds[playgrounds$Status=="Reopened"]
playgrounds[Status == "Reopened"]
playgrounds[playgrounds$Status == "Reopened"]
playgrounds["Status" == "Reopened"]
View(playgrounds)
playgrounds
playgrounds[playgrounds$Status == "Reopened"]
playgrounds %>% dplyr::filter(Status == "Reopened")
playgrounds %>% dplyr::filter(Status == "Reopened" | Status == "COVID-19 Closure")
runApp()
colorFactor(palette=palette_testing, playgrounds$Status)
palette_testing = c("red", "green")
colorFactor(palette=palette_testing, playgrounds$Status)
color1 <- colorFactor(palette=palette_testing, playgrounds$Status)
color1(Reopened)
color1("Reopened")
runApp()
View(ath_facilities_geo)
names(ath_facilities['primarysport'])
unique(ath_facilities['primarysport'])
ath_facilities_geo@data$primarysport==Tennis
ath_facilities_geo@data$primarysport=='Tennis'
ath_facilities_geo[ath_facilities_geo@data$primarysport=='Tennis']
ath_facilities_geo@data[ath_facilities_geo@data$primarysport=='Tennis']
runApp()
ath_facilities %>%  filter(ath_facilities_geo@data$primarysport == "Tennis")
ath_facilities_geo %>%  filter(ath_facilities_geo@data$primarysport == "Tennis")
runApp()
View(ath_facilities)
ath_facilities_geo@data$primarysport == "Tennis"
ath_facilities_geo[ath_facilities_geo@data$primarysport == "Tennis"]
View(ath_facilities_geo)
ath_facilities_geo@data[ath_facilities_geo@data$primarysport == "Tennis"]
subset(ath_facilities_geo, primarysport %in% c("Tennis"))
tennis <- subset(ath_facilities_geo, primarysport %in% c("Tennis"))
View(tennis)
unique(ath_facilities_geo@data$primarysport)
runApp()
View(dog_runs)
View(dog_runs_geo)
View(dog_runs)
View(skate_parks)
runApp()
View(tennis)
tidyverse_conflicts()
tidyverse_packages()
library(tidyverse)
library(sf)
install.packages('tigris')
library(tigris)
modzcta <- st_read('.data/modzcta.shp')
modzcta <- st_read('./data/modzcta.shp')
View(dog_runs_geo)
library(geojsonio)
modzcta <- geojsonio::geojson_read('./data/modzcta.geojson', what = 'sp')
View(modzcta)
cases <- read.csv("./covid_case_by_zip.csv") %>%
dplyr::select(MODIFIED_ZCTA, COVID_CASE_RATE, PERCENT_POSITIVE)
cases <- read.csv(".data//covid_case_by_zip.csv") %>%
dplyr::select(MODIFIED_ZCTA, COVID_CASE_RATE, PERCENT_POSITIVE)
cases <- read.csv(".data/covid_case_by_zip.csv") %>%
dplyr::select(MODIFIED_ZCTA, COVID_CASE_RATE, PERCENT_POSITIVE)
cases <- read.csv("./data/covid_case_by_zip.csv") %>%
dplyr::select(MODIFIED_ZCTA, COVID_CASE_RATE, PERCENT_POSITIVE)
all_modzcta <- geo_join(modzcta, cases,
'MODZCTA', 'MODIFIED_ZCTA',
how = 'inner')
View(modzcta)
all_modzcta <- geo_join(modzcta, cases,
'modzcta', 'MODIFIED_ZCTA',
how = 'inner')
View(all_modzcta)
all_modzcta <- geo_join(modzcta@data, cases,
'modzcta', 'MODIFIED_ZCTA',
how = 'inner')
all_modzcta <- geo_join(modzcta, cases,
'modzcta', 'MODIFIED_ZCTA',
how = 'inner')
all_modzcta <- geo_join(modzcta, cases,
'MODIFIED_ZCTA','modzcta',
how = 'inner')
modzcta <- geojsonio::geojson_read('./data/modzcta.geojson', what = 'sp')
cases <- read.csv("./data/covid_case_by_zip.csv") %>%
dplyr::select(MODIFIED_ZCTA, COVID_CASE_RATE, PERCENT_POSITIVE)
all_modzcta <- geo_join(modzcta, cases,
'MODIFIED_ZCTA','modzcta',
how = 'inner')
modzcta@data$modzcta <- as.numeric(modzcta@data$modzcta)
all_modzcta <- geo_join(modzcta, cases,
'MODIFIED_ZCTA','modzcta',
how = 'inner')
all_modzcta <- geo_join(modzcta, cases,
modzcta@data$modzcta, 'MODIFIED_ZCTA',
how = 'inner')
